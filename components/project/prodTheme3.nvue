<template lang="pug">
	view.flex.box.row.at(@click="$emit('click')", :class="[line && 'tail-line']")

		view.flex.imgBox.overhide
			image.img(:src="img")
		
		view.jb.right.f-1
			text.title.f-1 {{title}}
			view.row.f-1.ac
				text.s-26.c-99 {{stand}}
				//- text.tagPage(v-for="(item,index) in tag", :style="[item.color && {'border-color': item.color, color: item.color}]") {{item.text ? item.text : item}}
			view.between
				view.row
					text.numLeft X
					text.num {{num}}
				view.row
					text.priceLeft ￥
					text.price {{priceTo2}}

</template>

<script>
	
	export default {
		
		props: {
			title: {
				type: String,
				require: true
			},
			img: {
				type: String,
				require: true
			},
			price: {
				type: [Number, String],
				default: 0
			},
			num: {
				type: [Number, String],
				default: 1
			},
			tag: {
				type: Array,
				default: []
			},
			stand: {
				type: String,
			},
			line: {
				type: Boolean,
				default: false
			},

			// 方法
			click: {
				type: Function,
				default: ()=>{}
			}
		},
		computed: {
			priceTo2: function() {
				return Number(this.price).toFixed(2);
			}
		}
	}
</script>

<style lang="scss">
	.box {
		// height: 312rpx;
		// width: 346rpx;
	}
	.imgBox {
		width: 156rpx;
		height: 156rpx;
		border-radius: 10rpx;
	}
	.img {
		width: 156rpx;
		height: 156rpx;
		border-radius: 10rpx;
	}
	.right {
		margin-left: 20rpx;
	}
	.title {
		font-size: 26rpx;
		color: #333;
		lines: 2;
		text-overflow: ellipsis;
		line-height: 34rpx;
	}
	.num {
		font-size: 24rpx;
		color: #bfbfbf;
	}
	.price {
		font-size: 30rpx;
		color: #CF1322;
	}
	.numLeft {
		font-size: 18rpx;
		color: #bfbfbf;
	}
	.priceLeft {
		font-size: 24rpx;
		color: #CF1322;
	}
	.tagPage {
		font-size: 18rpx;
		border-width: 1px;
		border-style: solid;
		border-color: #CF1322;
		border-radius: 50rpx;
		color: #CF1322;
		padding: 3rpx 12rpx;
		margin: 8rpx 10rpx 8rpx 0;
	}
</style>
